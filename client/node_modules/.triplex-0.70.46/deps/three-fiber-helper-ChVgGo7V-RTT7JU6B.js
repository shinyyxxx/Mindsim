import {
  a,
  o,
  r
} from "./chunk-MKJCJPV3.js";
import {
  DoubleSide,
  MathUtils,
  createPortal,
  useFrame,
  useThree
} from "./chunk-KSHOG73P.js";
import {
  ni
} from "./chunk-2O755BNZ.js";
import "./chunk-F5X6INBZ.js";
import {
  require_jsx_runtime
} from "./chunk-FXVZLN7E.js";
import {
  require_react
} from "./chunk-KMU3Z7QX.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// ../../../Users/Admin/.vscode/extensions/trytriplex.triplex-vsce-0.2.55/node_modules/@triplex/renderer/dist/three-fiber-helper-ChVgGo7V.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
function T({ color: n }) {
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsxs)("mesh", { position: [0, 0, 0], rotation: [MathUtils.degToRad(-90), 0, 0], children: [
      (0, import_jsx_runtime.jsx)("ringGeometry", { args: [0.65, 0.7] }),
      (0, import_jsx_runtime.jsx)("meshBasicMaterial", { color: n, side: DoubleSide })
    ] }),
    (0, import_jsx_runtime.jsxs)("mesh", { position: [0, 0, 0], children: [
      (0, import_jsx_runtime.jsx)("sphereGeometry", { args: [0.1] }),
      (0, import_jsx_runtime.jsx)("meshBasicMaterial", { color: n })
    ] })
  ] });
}
var _ = (n, o2) => {
  switch (n) {
    // Rect area lights helper has been removed from core. For now we just use a standard
    // point light helper - we can investigate adding it at a later date.
    case "rectAreaLight":
    case "pointLight":
    case "ambientLight":
      return { Element: "pointLightHelper", args: [o2], type: "inbuilt" };
    case "hemisphereLight":
      return {
        Element: "hemisphereLightHelper",
        args: [o2],
        type: "inbuilt"
      };
    case "spotLight":
      return { Element: "spotLightHelper", args: [], type: "inbuilt" };
    case "directionalLight":
      return { Element: "directionalLightHelper", args: [], type: "inbuilt" };
    case "perspectiveCamera":
    case "orthographicCamera":
      return { Element: "cameraHelper", args: [], type: "inbuilt" };
    case "XROrigin":
      return {
        jsx: (0, import_jsx_runtime.jsx)(T, { color: "rgb(255,255,0)" }),
        type: "custom"
      };
    default:
      throw new Error("invariant: unexpected helper type");
  }
};
function G({
  children: n,
  helper: o2,
  size: c = 0.1
}) {
  const [t, d] = (0, import_react.useState)(null), r2 = (0, import_react.useRef)(null), l = (0, import_react.useRef)(null), f = useThree((e) => e.scene), g = ni(), s = _(o2, c), E = (0, import_react.useCallback)((e) => {
    const p = e ? e.parent : null;
    p && l.current && l.current.position.copy(p.position), d(p);
  }, []);
  return useFrame(() => {
    !r2.current || !t || !l.current || (t.layers.isEnabled(o) ? r2.current.traverse(
      (e) => e.layers.enable(o)
    ) : r2.current.traverse(
      (e) => e.layers.disable(o)
    ), t.layers.isEnabled(r) ? r2.current.traverse(
      (e) => e.layers.enable(r)
    ) : r2.current.traverse(
      (e) => e.layers.disable(r)
    ), s.type === "inbuilt" && r2.current.update(), s.type === "custom" && (r2.current.position.copy(t.position), r2.current.rotation.copy(t.rotation), r2.current.scale.copy(t.scale)), l.current.position.copy(t.position));
  }), (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    createPortal(
      (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
        (0, import_jsx_runtime.jsxs)("mesh", { name: "forced_visible", ref: l, visible: false, children: [
          (0, import_jsx_runtime.jsx)("boxGeometry", { args: [c * 2, c * 2, c * 2] }),
          n
        ] }),
        s.type === "inbuilt" && t && (0, import_jsx_runtime.jsx)(
          s.Element,
          {
            args: [t, ...s.args],
            layers: a,
            ref: r2,
            visible: g !== "play"
          }
        ),
        s.type === "custom" && (0, import_jsx_runtime.jsx)(
          "group",
          {
            layers: a,
            ref: r2,
            visible: g !== "play",
            children: s.jsx
          }
        )
      ] }),
      f
    ),
    (0, import_jsx_runtime.jsx)("group", { ref: E })
  ] });
}
export {
  G as ThreeFiberHelper,
  _ as resolveHelper
};
//# sourceMappingURL=three-fiber-helper-ChVgGo7V-RTT7JU6B.js.map
